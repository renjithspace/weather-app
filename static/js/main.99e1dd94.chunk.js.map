{"version":3,"sources":["components/NavigateButton/NavigateButton.module.css","components/ErrorBoundary/ErrorBoundary.module.css","utils/Date.utils.ts","App.state.ts","components/Alert/Alert.state.ts","utils/Forecast.util.ts","components/Forecast/Forecast.state.ts","store.ts","services/Alert.service.ts","services/Request.service.ts","services/Forecast.service.ts","assets/images/loading.svg","components/Loading/Loading.tsx","components/UnitSwitch/UnitSwitch.tsx","utils/Temperature.util.ts","components/Weather/Weather.tsx","components/NavigateButton/NavigateButton.tsx","components/CarouselNavigator/CarouselNavigator.tsx","components/WeatherCarousel/WeatherCarousel.tsx","services/Chart.service.ts","components/WeatherChart/WeatherChart.tsx","components/Forecast/Forecast.tsx","components/Alert/Alert.tsx","App.tsx","reportWebVitals.ts","components/Provider/Provider.tsx","components/ErrorBoundary/ErrorBoundary.tsx","index.tsx","components/Loading/Loading.module.css","components/Weather/Weather.module.css"],"names":["module","exports","DateUtil","datetime","moment","format","app","forecasts","alert","message","ForecastUtil","activeForecast","filter","forecast","date","activeForecasts","activeDates","map","includes","unit","pageIndex","activeForecastDt","reducers","combineReducers","state","action","type","dateFromDatetime","dt_txt","dt","createStore","StateService","store","dispatch","RequestService","source","this","axios","CancelToken","cancel","bind","url","a","get","response","data","AlertService","pushMessage","ForecastService","process","request","result","list","icon","Loading","className","styles","root","Box","display","flexDirection","alignItems","loader","src","loadingImage","alt","Typography","variant","align","color","UnitSwitch","props","handleChange","event","value","target","onChange","isChecked","Grid","container","justify","item","xs","sm","my","Paper","data-testid","spacing","FormControlLabel","name","checked","control","Radio","label","memo","TemperatureUtil","fahrenheit","temperature","converted","fahrenheitToCelsius","round","celsius","main","average","temp_min","temp_max","convertToUnit","segments","totalTemp","reduce","temp","segment","averageForecastTemp","averageTemp","length","withUnit","Weather","weather","iconImage","averageSegmentTemp","elevation","Card","card","onClick","CardContent","description","NavigateButton","testId","capitalize","direction","Icon","NavigateBeforeOutlined","NavigateNextOutlined","onNavigate","p","CarouselNavigator","navigators","justifyButtons","navigateButtons","navigator","mb","isEqual","WeatherCarousel","segmentsFromForecast","onSelect","ChartService","config","theme","title","labels","segement","timeFromDatetime","datasets","backgroundColor","palette","secondary","options","responsive","plugins","tooltip","callbacks","tooltipItems","dataset","formattedValue","legend","font","family","typography","fontFamily","text","size","weight","scales","xAxes","grid","drawBorder","yAxes","angleLines","WeatherChart","useTheme","weatherChart","connect","current","derived","uniqBy","startIndex","dailyForecasts","splice","segmentsFromForecasts","canPrevious","canNext","push","find","replaceUnit","incrementPageIndex","decrementPageIndex","replaceActiveForecastDt","activeForecastSegments","handleUnitChange","useCallback","handleCarouselNavigate","useEffect","defaultDt","setDefaultActiveForcast","activeForecastsSegments","carouselNavigators","isOpen","Boolean","replaceMessage","clearMessage","handleClose","Snackbar","open","autoHideDuration","IconButton","aria-label","Close","fontSize","onClose","hasForecasts","replaceForecasts","children","cancelListForecast","listForecast","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","Provider","ThemeProvider","ErrorBoundary","error","Component","install","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.99e1dd94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NavigateButton_root__1Gv5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ErrorBoundary_root__yxcjt\"};","import moment from 'moment'\n\nexport default class DateUtil {\n  static dateFromDatetime (datetime: string) {\n    return moment(datetime).format('LL')\n  }\n\n  static timeFromDatetime (datetime: string) {\n    return moment(datetime).format('LT')\n  }\n}\n","import { AnyAction } from 'redux'\r\nimport { ForecastData } from './services/Forecast.service'\r\nimport DateUtil from './utils/Date.utils'\r\n\r\ninterface AppState {\r\n  forecasts: ForecastData[]\r\n}\r\n\r\nexport interface AppActions {\r\n  replaceForecasts (forecasts: ForecastData[]): AnyAction\r\n}\r\n\r\nexport interface AppSelectors extends AppState {\r\n  hasForecasts: boolean\r\n}\r\n\r\nconst app: AppState = {\r\n  forecasts: []\r\n}\r\n\r\nexport const actions: AppActions = {\r\n  replaceForecasts (forecasts) {\r\n    return { type: 'REPLACE_APP_FORECASTS', forecasts }\r\n  }\r\n}\r\n\r\nexport function reducers (state = app, action: AnyAction) {\r\n  switch (action.type) {\r\n    case 'REPLACE_APP_FORECASTS': {\r\n      const forecasts = action.forecasts as ForecastData[]\r\n      app.forecasts = forecasts.map(forecast => {\r\n        forecast.date = DateUtil.dateFromDatetime(forecast.dt_txt)\r\n        return forecast\r\n      })\r\n      return { ...app }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport function selectors (state: { app: AppState }) {\r\n  const current = state.app\r\n  const derived = {\r\n    hasForecasts: Boolean(current.forecasts[0])\r\n  }\r\n  return { ...current, ...derived }\r\n}\r\n","import { AnyAction } from 'redux'\n\ninterface AlertState {\n  message: string | null\n}\n\nexport interface AlertActions {\n  replaceMessage (message: string): AnyAction\n  clearMessage (): AnyAction\n}\n\nexport interface AlertSelectors extends AlertState {\n  isOpen: boolean\n}\n\nconst alert: AlertState = {\n  message: null\n}\n\nexport const actions: AlertActions = {\n  replaceMessage (message) {\n    return { type: 'REPLACE_ALERT_MESSAGE', message }\n  },\n  clearMessage () {\n    return { type: 'CLEAR_ALERT_MESSAGE' }\n  }\n}\n\nexport function reducers (state = alert, action: AnyAction) {\n  switch (action.type) {\n    case 'REPLACE_ALERT_MESSAGE':\n      alert.message = action.message\n      return { ...alert }\n    case 'CLEAR_ALERT_MESSAGE':\n      alert.message = null\n      return { ...alert }\n    default:\n      return state\n  }\n}\n\nexport function selectors (state: { alert: AlertState }): AlertSelectors {\n  const current = state.alert\n  const derived = {\n    isOpen: Boolean(state.alert.message)\n  }\n  return { ...current, ...derived }\n}\n","import { ForecastData } from '../services/Forecast.service'\n\nexport default class ForecastUtil {\n  static segmentsFromForecast (activeForecast: ForecastData, forecasts: ForecastData[]) {\n    return forecasts.filter(forecast => (forecast.date === activeForecast.date))\n  }\n\n  static segmentsFromForecasts (activeForecasts: ForecastData[], forecasts: ForecastData[]) {\n    const activeDates = activeForecasts.map(forecast => forecast.date)\n    return forecasts.filter(forecast => activeDates.includes(forecast.date))\n  }\n}\n","import { AnyAction } from 'redux'\r\nimport { uniqBy } from 'lodash'\r\nimport { ForecastData } from '../../services/Forecast.service'\r\nimport { NavigateDirection } from '../NavigateButton/NavigateButton'\r\nimport { ForecastProps } from './Forecast'\r\nimport ForecastUtil from '../../utils/Forecast.util'\r\n\r\nexport type Unit = 'celsius' | 'fahrenheit'\r\n\r\ninterface ForecastState {\r\n  unit: Unit\r\n  pageIndex: number\r\n  activeForecastDt: ForecastData['dt']\r\n}\r\n\r\nexport interface ForecastActions {\r\n  replaceUnit (unit: Unit): AnyAction\r\n  incrementPageIndex (): AnyAction\r\n  decrementPageIndex (): AnyAction,\r\n  replaceActiveForecastDt (dt: number): AnyAction\r\n}\r\n\r\nexport interface ForecastSelectors extends ForecastState {\r\n  dailyForecasts: ForecastData[]\r\n  activeForecasts: ForecastData[]\r\n  activeForecastsSegments: ForecastData[]\r\n  carouselNavigators: NavigateDirection[]\r\n  activeForecast: ForecastData | null\r\n  activeForecastSegments: ForecastData[]\r\n}\r\n\r\nconst forecast: ForecastState = {\r\n  unit: 'fahrenheit',\r\n  pageIndex: 0,\r\n  activeForecastDt: 0\r\n}\r\n\r\nexport const actions: ForecastActions = {\r\n  replaceUnit (unit) {\r\n    return { type: 'REPLACE_FORECAST_UNIT', unit }\r\n  },\r\n  incrementPageIndex () {\r\n    return { type: 'INCREMENT_FORECAST_PAGE_INDEX' }\r\n  },\r\n  decrementPageIndex () {\r\n    return { type: 'DECREMENT_FORECAST_PAGE_INDEX' }\r\n  },\r\n  replaceActiveForecastDt (dt) {\r\n    return { type: 'REPLACE_FORECAST_ACTIVE_FORECAST_DT', dt }\r\n  }\r\n}\r\n\r\nexport function reducers (state = forecast, action: AnyAction) {\r\n  switch (action.type) {\r\n    case 'REPLACE_FORECAST_UNIT':\r\n      forecast.unit = action.unit\r\n      return { ...forecast }\r\n    case 'INCREMENT_FORECAST_PAGE_INDEX':\r\n      forecast.pageIndex = forecast.pageIndex + 1\r\n      return { ...forecast }\r\n    case 'DECREMENT_FORECAST_PAGE_INDEX':\r\n      forecast.pageIndex = forecast.pageIndex - 1\r\n      return { ...forecast }\r\n    case 'REPLACE_FORECAST_ACTIVE_FORECAST_DT':\r\n      forecast.activeForecastDt = action.dt\r\n      return { ...forecast }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport function selectors (state: { forecast: ForecastState }, props: ForecastProps): ForecastSelectors {\r\n  const carouselSize = 3\r\n  const current = state.forecast\r\n  const derived = {\r\n    get dailyForecasts () {\r\n      return uniqBy(props.forecasts, 'date')\r\n    },\r\n    get activeForecasts () {\r\n      const { pageIndex: startIndex } = current\r\n      return this.dailyForecasts.splice(startIndex, carouselSize)\r\n    },\r\n    get activeForecastsSegments () {\r\n      return ForecastUtil.segmentsFromForecasts(this.activeForecasts, props.forecasts)\r\n    },\r\n    get carouselNavigators () {\r\n      const navigators: NavigateDirection[] = []\r\n      const canPrevious = current.pageIndex > 0\r\n      const canNext = this.dailyForecasts[current.pageIndex + carouselSize]\r\n      if (canPrevious) navigators.push('previous')\r\n      if (canNext) navigators.push('next')\r\n      return navigators\r\n    },\r\n    get activeForecast () {\r\n      const { activeForecastDt: dt } = current\r\n      const active = this.dailyForecasts.find(forecast => (forecast.dt === dt))\r\n      return active || null\r\n    },\r\n    get activeForecastSegments () {\r\n      if (!this.activeForecast) return []\r\n      return ForecastUtil.segmentsFromForecast(this.activeForecast, props.forecasts)\r\n    }\r\n  }\r\n  return { ...current, ...derived }\r\n}\r\n","import { combineReducers, createStore } from 'redux'\nimport { reducers as app } from './App.state'\nimport { reducers as alert } from './components/Alert/Alert.state'\nimport { reducers as forecast } from './components/Forecast/Forecast.state'\n\nconst reducers = combineReducers({\n  app,\n  alert,\n  forecast\n})\n\nexport default createStore(reducers)\n","import store from '../store'\n\nexport default class StateService {\n  static pushMessage (message: string) {\n    store.dispatch({ type: 'REPLACE_ALERT_MESSAGE', message })\n  }\n\n  static clearMessage () {\n    store.dispatch({ type: 'CLEAR_ALERT_MESSAGE' })\n  }\n}\n","import axios, { CancelTokenSource } from 'axios'\nimport AlertService from './Alert.service'\n\nexport default class RequestService {\n  private source: CancelTokenSource\n\n  constructor () {\n    this.source = axios.CancelToken.source()\n    this.cancel = this.cancel.bind(this)\n  }\n\n  cancel () {\n    this.source.cancel()\n  }\n\n  async get (url: string) {\n    try {\n      const response = await axios.get(url)\n      return response.data\n    } catch (error) {\n      const { response } = error\n      const message = response ? response.data.message : error.message\n      AlertService.pushMessage(message)\n    }\n  }\n}\n","import RequestService from './Request.service'\r\n\r\nexport interface WeatherData {\r\n  main: string\r\n  description: string\r\n  icon: string\r\n}\r\n\r\nexport interface ForecastData {\r\n  dt: number\r\n  main: {\r\n    'temp_min': number\r\n    'temp_max': number\r\n  }\r\n  weather: WeatherData[]\r\n  'dt_txt': string\r\n  date?: string\r\n}\r\n\r\nexport type ForecastListCancel = () => void\r\ntype ForecastListResult = [ForecastData[] | null, ForecastListCancel]\r\n\r\nexport default class ForecastService {\r\n  static async list (): Promise<ForecastListResult> {\r\n    const endpoint = 'https://api.openweathermap.org/data/2.5/forecast'\r\n    const apiKey = process.env.REACT_APP_OPENWEATHER_API_KEY\r\n    const location = process.env.REACT_APP_OPENWEATHER_LOCATION\r\n    const days = 40\r\n    const url = `${endpoint}?q=${location}&APPID=${apiKey}&cnt=${days}&units=imperial`\r\n    const request = new RequestService()\r\n    const response = await request.get(url)\r\n    const result = response ? response.list : []\r\n    return [result, request.cancel]\r\n  }\r\n\r\n  static iconImage (icon: WeatherData['icon']) {\r\n    return `http://openweathermap.org/img/wn/${icon}.png`\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loading.a6877337.svg\";","import React from 'react'\r\nimport { Box, Typography } from '@material-ui/core'\r\nimport loadingImage from '../../assets/images/loading.svg'\r\nimport styles from './Loading.module.css'\r\n\r\nexport default function Loading () {\r\n  return (\r\n    <div className={styles.root}>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\">\r\n        <img\r\n          className={styles.loader}\r\n          src={loadingImage}\r\n          alt=\"Four bubbles bouncing\"/>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          alignItems=\"center\">\r\n          <Typography\r\n            variant=\"h6\"\r\n            align=\"center\">\r\n            Loading...\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            align=\"center\">\r\n            Please wait. We are collecting latest weather data.\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n","import React, { ChangeEvent, memo } from 'react'\r\nimport { Box, FormControlLabel, Grid, Paper, Radio } from '@material-ui/core'\r\nimport { Unit } from '../Forecast/Forecast.state'\r\n\r\ninterface UnitSwitchProps {\r\n  unit: Unit\r\n  onChange: (unit: Unit) => void\r\n}\r\n\r\nfunction UnitSwitch (props: UnitSwitchProps) {\r\n  function handleChange (event: ChangeEvent<HTMLInputElement>) {\r\n    const value = event.target.value as Unit\r\n    props.onChange(value)\r\n  }\r\n  function isChecked (unit: Unit) {\r\n    return (props.unit === unit)\r\n  }\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\">\r\n      <Grid\r\n        item\r\n        xs={10}\r\n        sm={6}>\r\n        <Box my={4}>\r\n          <Paper data-testid=\"unitSwitch\">\r\n            <Grid\r\n              container\r\n              justify=\"center\"\r\n              spacing={2}>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  name=\"unit\"\r\n                  value=\"celsius\"\r\n                  checked={isChecked('celsius')}\r\n                  control={<Radio onChange={handleChange}/>}\r\n                  label=\"Celsius\"\r\n                  data-testid=\"celsiusUnit\"/>\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  name=\"unit\"\r\n                  value=\"fahrenheit\"\r\n                  checked={isChecked('fahrenheit')}\r\n                  control={<Radio onChange={handleChange}/>}\r\n                  label=\"Fahrenheit\"\r\n                  data-testid=\"fahrenheitUnit\"/>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default memo(UnitSwitch)\r\n","import { round } from 'lodash'\nimport { Unit } from '../components/Forecast/Forecast.state'\nimport { ForecastData } from '../services/Forecast.service'\n\nexport default class TemperatureUtil {\n  static fahrenheitToCelsius (fahrenheit: number) {\n    return (fahrenheit - 32) * (5 / 9)\n  }\n\n  static convertToUnit (temperature: number, unit: Unit) {\n    const converted = (unit === 'fahrenheit')\n      ? temperature\n      : this.fahrenheitToCelsius(temperature)\n    return round(converted)\n  }\n\n  static withUnit (temperature: number, unit: Unit) {\n    const symbols: Record<Unit, string> = {\n      fahrenheit: '℉',\n      celsius: '℃'\n    }\n    return `${temperature} ${symbols[unit]}`\n  }\n\n  static averageForecastTemp (forecast: ForecastData, unit: Unit) {\n    const { temp_min: tempMin, temp_max: tempMax } = forecast.main\n    const average = (tempMin + tempMax) / 2\n    return this.convertToUnit(average, unit)\n  }\n\n  static averageSegmentTemp (segments: ForecastData[], unit: Unit) {\n    const totalTemp = segments.reduce((temp, segment) => {\n      return temp + this.averageForecastTemp(segment, unit)\n    }, 0)\n    const averageTemp = round((totalTemp / segments.length))\n    return this.withUnit(averageTemp, unit)\n  }\n}\n","import React from 'react'\r\nimport { Card, CardContent, Grid, Typography } from '@material-ui/core'\r\nimport ForecastService, { ForecastData } from '../../services/Forecast.service'\r\nimport { Unit } from '../Forecast/Forecast.state'\r\nimport DateUtil from '../../utils/Date.utils'\r\nimport TemperatureUtil from '../../utils/Temperature.util'\r\nimport styles from './Weather.module.css'\r\n\r\nexport type WeatherClickHandler = (dt: number) => void\r\n\r\ninterface WeatherProps {\r\n  forecast: ForecastData\r\n  segments: ForecastData[]\r\n  unit: Unit\r\n  activeForecastDt: number\r\n  onClick: WeatherClickHandler\r\n}\r\n\r\nexport default function Weather (props: WeatherProps) {\r\n  const { forecast, unit, activeForecastDt } = props\r\n  const weather = forecast.weather[0]\r\n  const iconImage = ForecastService.iconImage(weather.icon)\r\n  const date = DateUtil.dateFromDatetime(forecast.dt_txt)\r\n  const temperature = TemperatureUtil.averageSegmentTemp(props.segments, unit)\r\n  const isActive = (forecast.dt === activeForecastDt)\r\n  const elevation = isActive ? 4 : 1\r\n  function handleClick () {\r\n    props.onClick(forecast.dt)\r\n  }\r\n  return (\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      sm={4}>\r\n      <Card\r\n        className={styles.card}\r\n        elevation={elevation}\r\n        onClick={handleClick}\r\n        data-testid=\"weatherCard\">\r\n        <CardContent>\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"secondary\">\r\n            {temperature}\r\n          </Typography>\r\n          <Typography variant=\"h6\">\r\n            {weather.main}\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">\r\n            {weather.description}\r\n          </Typography>\r\n          <img\r\n            className={styles.icon}\r\n            src={iconImage}\r\n            alt=\"Current weather icon\"/>\r\n          <Typography variant=\"subtitle2\">\r\n            {date}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Box, Paper } from '@material-ui/core'\r\nimport { NavigateBeforeOutlined, NavigateNextOutlined } from '@material-ui/icons'\r\nimport { capitalize } from 'lodash'\r\nimport styles from './NavigateButton.module.css'\r\n\r\nexport type NavigateDirection = 'next' | 'previous'\r\nexport type NavigateHandleCallback = (direction: NavigateDirection) => void\r\n\r\ninterface NavigateButtonProps {\r\n  direction: NavigateDirection\r\n  onNavigate: NavigateHandleCallback\r\n}\r\n\r\nexport default function NavigateButton (props: NavigateButtonProps) {\r\n  const testId = `button${capitalize(props.direction)}`\r\n  const Icon = (props.direction === 'previous')\r\n    ? NavigateBeforeOutlined\r\n    : NavigateNextOutlined\r\n  function handleClick () {\r\n    props.onNavigate(props.direction)\r\n  }\r\n  return (\r\n    <Paper\r\n      className={styles.root}\r\n      onClick={handleClick}\r\n      data-testid={testId}>\r\n      <Box p={1}>\r\n        <Icon/>\r\n      </Box>\r\n    </Paper>\r\n  )\r\n}\r\n","import React, { memo } from 'react'\r\nimport { Box, Grid } from '@material-ui/core'\r\nimport NavigateButton,\r\n{\r\n  NavigateDirection,\r\n  NavigateHandleCallback\r\n} from '../NavigateButton/NavigateButton'\r\nimport { isEqual } from 'lodash'\r\n\r\ninterface CarouselNavigatorProps {\r\n  navigators: NavigateDirection[]\r\n  onNavigate: NavigateHandleCallback\r\n}\r\n\r\nfunction CarouselNavigator (props: CarouselNavigatorProps) {\r\n  const { navigators } = props\r\n  const isNextOnlyNavigate = (\r\n    !navigators.includes('previous') &&\r\n    navigators.includes('next')\r\n  )\r\n  const justifyButtons = isNextOnlyNavigate ? 'flex-end' : 'space-between'\r\n  const navigateButtons = navigators.map(navigator => (\r\n    <Grid\r\n      item\r\n      key={navigator}>\r\n      <NavigateButton\r\n        direction={navigator}\r\n        onNavigate={props.onNavigate} />\r\n    </Grid>\r\n  ))\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\">\r\n      <Grid\r\n        item\r\n        xs={8}>\r\n        <Box mb={3}>\r\n          <Grid\r\n            container\r\n            justify={justifyButtons}>\r\n            {navigateButtons}\r\n          </Grid>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default memo(CarouselNavigator, isEqual)\r\n","import React from 'react'\r\nimport { Box, Grid } from '@material-ui/core'\r\nimport { ForecastData } from '../../services/Forecast.service'\r\nimport { Unit } from '../Forecast/Forecast.state'\r\nimport { NavigateDirection, NavigateHandleCallback } from '../NavigateButton/NavigateButton'\r\nimport Weather, { WeatherClickHandler } from '../Weather/Weather'\r\nimport ForecastUtil from '../../utils/Forecast.util'\r\nimport CarouselNavigator from '../CarouselNavigator/CarouselNavigator'\r\n\r\ninterface WeatherCarouselProps {\r\n  forecasts: ForecastData[]\r\n  segments: ForecastData[]\r\n  unit: Unit\r\n  navigators: NavigateDirection[]\r\n  activeForecastDt: number\r\n  onNavigate: NavigateHandleCallback\r\n  onSelect: WeatherClickHandler\r\n}\r\n\r\nexport default function WeatherCarousel (props: WeatherCarouselProps) {\r\n  function renderWeather (forecast: ForecastData) {\r\n    const segments = ForecastUtil.segmentsFromForecast(forecast, props.segments)\r\n    return (\r\n      <Weather\r\n        forecast={forecast}\r\n        segments={segments}\r\n        unit={props.unit}\r\n        activeForecastDt={props.activeForecastDt}\r\n        onClick={props.onSelect}\r\n        key={forecast.dt}/>\r\n    )\r\n  }\r\n  return (\r\n    <Box data-testid=\"weatherCarousel\">\r\n      <CarouselNavigator\r\n        onNavigate={props.onNavigate}\r\n        navigators={props.navigators}/>\r\n      <Grid\r\n        container\r\n        spacing={3}>\r\n        {props.forecasts.map(renderWeather)}\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\n","import { ChartConfiguration } from 'chart.js'\nimport { Theme } from '@material-ui/core'\nimport { ForecastData } from './Forecast.service'\nimport { Unit } from '../components/Forecast/Forecast.state'\nimport DateUtil from '../utils/Date.utils'\nimport TemperatureUtil from '../utils/Temperature.util'\n\nexport interface WeatherChartConfig {\n  forecast: ForecastData | null\n  segments: ForecastData[]\n  unit: Unit,\n  theme: Theme\n}\n\nexport default class ChartService {\n  static weatherChart (config: WeatherChartConfig) {\n    const { forecast, segments, unit, theme } = config\n    const title = forecast\n      ? DateUtil.dateFromDatetime(forecast.dt_txt)\n      : ''\n    const labels = segments.map(segement => {\n      return DateUtil.timeFromDatetime(segement.dt_txt)\n    })\n    const dataset = segments.map(segement => {\n      return TemperatureUtil.averageForecastTemp(segement, unit)\n    })\n    const data: ChartConfiguration['data'] = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'Temperature',\n          data: dataset,\n          backgroundColor: theme.palette.secondary.main\n        }\n      ]\n    }\n    const options: ChartConfiguration['options'] = {\n      responsive: true,\n      plugins: {\n        tooltip: {\n          callbacks: {\n            label (this, tooltipItems: any) {\n              const { dataset, formattedValue } = tooltipItems\n              const temperature = TemperatureUtil.withUnit(formattedValue, unit)\n              return `${dataset.label}: ${temperature}`\n            }\n          }\n        },\n        legend: {\n          labels: {\n            font: {\n              family: theme.typography.fontFamily\n            }\n          }\n        },\n        title: {\n          display: true,\n          text: title,\n          font: {\n            family: theme.typography.fontFamily,\n            size: 15,\n            weight: '500'\n          }\n        }\n      },\n      scales: {\n        xAxes: {\n          grid: { display: false, drawBorder: false }\n        },\n        yAxes: {\n          angleLines: { display: false },\n          grid: { display: false, drawBorder: false }\n        }\n      }\n    }\n    return { data, options }\n  }\n}\n","import React, { memo } from 'react'\r\nimport { Box, Card, CardContent, Grid } from '@material-ui/core'\r\nimport { useTheme } from '@material-ui/core/styles'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport { isEqual } from 'lodash'\r\nimport { Unit } from '../Forecast/Forecast.state'\r\nimport { ForecastData } from '../../services/Forecast.service'\r\nimport ChartService, { WeatherChartConfig } from '../../services/Chart.service'\r\n\r\ninterface WeatherChartProps {\r\n  forecast: ForecastData\r\n  segments: ForecastData[]\r\n  unit: Unit\r\n}\r\n\r\nfunction WeatherChart (props: WeatherChartProps) {\r\n  const { forecast, segments, unit } = props\r\n  const theme = useTheme()\r\n  const config: WeatherChartConfig = { forecast, segments, unit, theme }\r\n  const { data, options } = ChartService.weatherChart(config)\r\n  return (\r\n    <Grid container>\r\n      <Grid\r\n        item\r\n        xs={12}>\r\n        <Box my={3}>\r\n          <Card data-testid=\"weatherChart\">\r\n            <CardContent>\r\n              <Box>\r\n                <Bar\r\n                  type=\"bar\"\r\n                  data={data}\r\n                  options={options} />\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default memo(WeatherChart, isEqual)\r\n","import React, { Fragment, useCallback, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { ForecastData } from '../../services/Forecast.service'\r\nimport { Unit, ForecastActions, ForecastSelectors, selectors, actions } from './Forecast.state'\r\nimport { NavigateDirection } from '../NavigateButton/NavigateButton'\r\nimport UnitSwitch from '../UnitSwitch/UnitSwitch'\r\nimport WeatherCarousel from '../WeatherCarousel/WeatherCarousel'\r\nimport WeatherChart from '../WeatherChart/WeatherChart'\r\n\r\nexport interface ForecastProps {\r\n  forecasts: ForecastData[]\r\n}\r\n\r\ninterface ForecastCombinedProps\r\n  extends ForecastProps, ForecastSelectors, ForecastActions {}\r\n\r\nfunction Forecast (props: ForecastCombinedProps) {\r\n  const weatherChart = (\r\n    props.activeForecast &&\r\n    <WeatherChart\r\n      forecast={props.activeForecast}\r\n      segments={props.activeForecastSegments}\r\n      unit={props.unit}/>\r\n  )\r\n  const handleUnitChange = useCallback((unit: Unit) => {\r\n    props.replaceUnit(unit)\r\n  }, [props.replaceUnit])\r\n  const handleCarouselNavigate = useCallback((direction: NavigateDirection) => {\r\n    (direction === 'next')\r\n      ? props.incrementPageIndex()\r\n      : props.decrementPageIndex()\r\n  }, [props.incrementPageIndex, props.decrementPageIndex])\r\n  function handleCarouselSelect (dt: number) {\r\n    props.replaceActiveForecastDt(dt)\r\n  }\r\n  function setDefaultActiveForcast () {\r\n    const defaultDt = props.forecasts[0].dt\r\n    props.replaceActiveForecastDt(defaultDt)\r\n  }\r\n  useEffect(() => {\r\n    setDefaultActiveForcast()\r\n  }, [])\r\n  return (\r\n    <Fragment>\r\n      <UnitSwitch\r\n        unit={props.unit}\r\n        onChange={handleUnitChange}/>\r\n      <WeatherCarousel\r\n        forecasts={props.activeForecasts}\r\n        segments={props.activeForecastsSegments}\r\n        unit={props.unit}\r\n        navigators={props.carouselNavigators}\r\n        activeForecastDt={props.activeForecastDt}\r\n        onNavigate={handleCarouselNavigate}\r\n        onSelect={handleCarouselSelect}/>\r\n        {weatherChart}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default connect(selectors, actions)(Forecast)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { IconButton, Snackbar } from '@material-ui/core'\r\nimport { Close } from '@material-ui/icons'\r\nimport { actions, selectors, AlertSelectors, AlertActions } from './Alert.state'\r\n\r\ninterface AlertProps extends AlertSelectors, AlertActions {}\r\n\r\nfunction Alert (props: AlertProps) {\r\n  function handleClose () {\r\n    props.clearMessage()\r\n  }\r\n  return (\r\n    <Snackbar\r\n      open={props.isOpen}\r\n      message={props.message}\r\n      autoHideDuration={6000}\r\n      action={\r\n        <IconButton\r\n          size=\"small\"\r\n          aria-label=\"close\"\r\n          color=\"inherit\"\r\n          onClick={handleClose}>\r\n          <Close fontSize=\"small\" />\r\n        </IconButton>}\r\n      onClose={handleClose}\r\n      data-testid=\"alert\"/>\r\n  )\r\n}\r\n\r\nexport default connect(selectors, actions)(Alert)\r\n","import React, { useEffect } from 'react'\r\nimport { Container } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport ForecastService, { ForecastListCancel } from './services/Forecast.service'\r\nimport { actions, selectors, AppSelectors, AppActions } from './App.state'\r\nimport Loading from './components/Loading/Loading'\r\nimport Forecast from './components/Forecast/Forecast'\r\nimport Alert from './components/Alert/Alert'\r\n\r\ninterface AppProps extends AppSelectors, AppActions {}\r\n\r\nfunction App (props: AppProps) {\r\n  const children = props.hasForecasts\r\n    ? <Forecast forecasts={props.forecasts}/>\r\n    : <Loading/>\r\n  let cancelListForecast: ForecastListCancel | null = null\r\n  async function listForecast () {\r\n    const [forecasts, cancel] = await ForecastService.list()\r\n    cancelListForecast = cancel\r\n    if (forecasts) props.replaceForecasts(forecasts)\r\n  }\r\n  useEffect(() => {\r\n    listForecast()\r\n  }, [])\r\n  useEffect(() => {\r\n    return function umount () {\r\n      if (cancelListForecast) cancelListForecast()\r\n    }\r\n  })\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      {children}\r\n      <Alert/>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default connect(selectors, actions)(App)\r\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React, { ReactNode } from 'react'\r\nimport { Provider as StateProvider } from 'react-redux'\r\nimport { ThemeProvider } from '@material-ui/styles'\r\nimport store from '../../store'\r\n\r\n// Strict mode issue: https://github.com/mui-org/material-ui/issues/13394\r\nimport { unstable_createMuiStrictModeTheme as createTheme } from '@material-ui/core'\r\n\r\ninterface ProviderProps {\r\n  children: ReactNode\r\n}\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: 'Inter, sans-serif'\r\n  }\r\n})\r\n\r\nexport default function Provider (props: ProviderProps) {\r\n  return (\r\n    <StateProvider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        {props.children}\r\n      </ThemeProvider>\r\n    </StateProvider>\r\n  )\r\n}\r\n","import { Box, Typography } from '@material-ui/core'\nimport React, { Component } from 'react'\nimport styles from './ErrorBoundary.module.css'\n\ninterface ErrorBoundaryProps {}\n\ninterface ErrorBoundaryState {\n  message: string | null\n}\n\nexport default class ErrorBoundary\n  extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor (props: ErrorBoundaryProps) {\n    super(props)\n    this.state = {\n      message: null\n    }\n  }\n\n  static getDerivedStateFromError (error: Error) {\n    return { message: error.message }\n  }\n\n  render () {\n    if (this.state.message) {\n      return (\n        <div className={styles.root}>\n          <Box>\n            <Typography variant=\"h6\">Something went wrong!</Typography>\n            <Typography color=\"textSecondary\">\n              {this.state.message}\n            </Typography>\n          </Box>\n        </div>\n      )\n    }\n    return this.props.children\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { install } from 'resize-observer'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport Provider from './components/Provider/Provider'\nimport ErrorBoundary from './components/ErrorBoundary/ErrorBoundary'\n\n// ResizeObserver polyfill https://github.com/chartjs/Chart.js/issues/8414\ninstall()\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <Provider>\n        <App />\n      </Provider>\n      <CssBaseline/>\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Loading_root__eDfFn\",\"loader\":\"Loading_loader__fHWHo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Weather_card__1i1vW\",\"icon\":\"Weather_icon__16LAY\"};"],"sourceRoot":""}